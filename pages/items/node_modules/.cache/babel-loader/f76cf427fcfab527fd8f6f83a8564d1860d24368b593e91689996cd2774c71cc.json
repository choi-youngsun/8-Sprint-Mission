{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uCD5C\\uC601\\uC120\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\sprint_mission\\\\8-Sprint-Mission\\\\pages\\\\items\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\n/*\r\nimport { getProducts } from \"../api.js\";\r\nimport \"./App.css\";\r\nimport ProductList from \"./ProductList.js\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst LIMIT = 6;\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [order, setOrder] = useState(\"createdAt\");\r\n  const [hasNext, setHasNext] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingError, setLoadingError] = useState(null);\r\n\r\n  const sortedItems = items.sort((a, b) => b[order] - a[order]);\r\n\r\n  const handleNewestClick = () => setOrder(\"createdAt\");\r\n  const handleBestClick = () => setOrder(\"favoriteCount\");\r\n  const handleDelete = (id) => {\r\n    const nextItems = items.filter((item) => item.id !== id);\r\n    setItems(nextItems);\r\n  };\r\n\r\n  const handleLoad = async (options) => {\r\n    let result;\r\n    try {\r\n      setIsLoading(true);\r\n      setLoadingError(null);\r\n      result = await getProducts(options);\r\n    } catch (error) {\r\n      setLoadingError(error);\r\n      return;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n\r\n    const { reviews, paging } = result;\r\n    if (options.offset === 0) {\r\n      setItems(reviews);\r\n    } else {\r\n      setItems((previewItems) => [...previewItems, ...reviews]);\r\n    }\r\n    setOffset(options.offset + options.limit);\r\n    setHasNext(paging.hasNext);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    handleLoad({ order, offset, limit: LIMIT });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleLoad({ order, offset: 0, limit: LIMIT });\r\n  }, [order]);\r\n\r\n  return (\r\n    <div>\r\n      <p>판다마켓 로고</p>\r\n      <a href=\"#\">자유게시판</a>\r\n      <a href=\"#\"> 중고마켓</a>\r\n      <button>로그인</button>\r\n      <div>\r\n        <div>\r\n          <h1>베스트 상품</h1>\r\n          <p>베스트 상품 섹션 만들어서 넣을거임</p>\r\n        </div>\r\n        <h1>판매중인 상품</h1>\r\n        <input placeholder=\"검색할 상품을 입력하세요\"></input>\r\n        <button>상품 등록하기</button>\r\n        <button onClick={handleNewestClick}>최신순</button>\r\n        <button onClick={handleBestClick}>좋아요순</button>\r\n      </div>\r\n      <ProductList items={sortedItems} />\r\n      {hasNext && (\r\n        <button disabled={isLoading} onClick={handleLoadMore}>\r\n          더보기\r\n        </button>\r\n      )}\r\n      {loadingError?.message && <span>{loadingError?.message}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n*/\n\nimport { getProducts } from \"../api.js\";\nimport { useState, useEffect } from \"react\";\nimport ProductList from \"./ProductList.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const handleLoad = async () => {\n    const {\n      products\n    } = await getProducts();\n    setItems(products);\n  };\n  useEffect(() => {\n    handleLoad();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductList, {\n      item: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["getProducts","useState","useEffect","ProductList","jsxDEV","_jsxDEV","App","_s","items","setItems","handleLoad","products","children","item","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/최영선/OneDrive/바탕 화면/sprint_mission/8-Sprint-Mission/pages/items/src/components/App.js"],"sourcesContent":["/*\r\nimport { getProducts } from \"../api.js\";\r\nimport \"./App.css\";\r\nimport ProductList from \"./ProductList.js\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst LIMIT = 6;\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState([]);\r\n  const [offset, setOffset] = useState(0);\r\n  const [order, setOrder] = useState(\"createdAt\");\r\n  const [hasNext, setHasNext] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadingError, setLoadingError] = useState(null);\r\n\r\n  const sortedItems = items.sort((a, b) => b[order] - a[order]);\r\n\r\n  const handleNewestClick = () => setOrder(\"createdAt\");\r\n  const handleBestClick = () => setOrder(\"favoriteCount\");\r\n  const handleDelete = (id) => {\r\n    const nextItems = items.filter((item) => item.id !== id);\r\n    setItems(nextItems);\r\n  };\r\n\r\n  const handleLoad = async (options) => {\r\n    let result;\r\n    try {\r\n      setIsLoading(true);\r\n      setLoadingError(null);\r\n      result = await getProducts(options);\r\n    } catch (error) {\r\n      setLoadingError(error);\r\n      return;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n\r\n    const { reviews, paging } = result;\r\n    if (options.offset === 0) {\r\n      setItems(reviews);\r\n    } else {\r\n      setItems((previewItems) => [...previewItems, ...reviews]);\r\n    }\r\n    setOffset(options.offset + options.limit);\r\n    setHasNext(paging.hasNext);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    handleLoad({ order, offset, limit: LIMIT });\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleLoad({ order, offset: 0, limit: LIMIT });\r\n  }, [order]);\r\n\r\n  return (\r\n    <div>\r\n      <p>판다마켓 로고</p>\r\n      <a href=\"#\">자유게시판</a>\r\n      <a href=\"#\"> 중고마켓</a>\r\n      <button>로그인</button>\r\n      <div>\r\n        <div>\r\n          <h1>베스트 상품</h1>\r\n          <p>베스트 상품 섹션 만들어서 넣을거임</p>\r\n        </div>\r\n        <h1>판매중인 상품</h1>\r\n        <input placeholder=\"검색할 상품을 입력하세요\"></input>\r\n        <button>상품 등록하기</button>\r\n        <button onClick={handleNewestClick}>최신순</button>\r\n        <button onClick={handleBestClick}>좋아요순</button>\r\n      </div>\r\n      <ProductList items={sortedItems} />\r\n      {hasNext && (\r\n        <button disabled={isLoading} onClick={handleLoadMore}>\r\n          더보기\r\n        </button>\r\n      )}\r\n      {loadingError?.message && <span>{loadingError?.message}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n*/\r\n\r\nimport { getProducts } from \"../api.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ProductList from \"./ProductList.js\";\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState([]);\r\n  const handleLoad = async () => {\r\n    const { products } = await getProducts();\r\n    setItems(products);\r\n  };\r\n  useEffect(() => {\r\n    handleLoad();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ProductList item={items} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,WAAW;AACvC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAM;MAAEC;IAAS,CAAC,GAAG,MAAMX,WAAW,CAAC,CAAC;IACxCS,QAAQ,CAACE,QAAQ,CAAC;EACpB,CAAC;EACDT,SAAS,CAAC,MAAM;IACdQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAO,QAAA,eACEP,OAAA,CAACF,WAAW;MAACU,IAAI,EAAEL;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAACV,EAAA,CAfQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}